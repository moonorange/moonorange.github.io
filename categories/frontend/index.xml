<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend on Kei's blog</title><link>https://moonorange.github.io/categories/frontend/</link><description>Recent content in Frontend on Kei's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 05 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://moonorange.github.io/categories/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>非同期処理(Asynchronous Programming)</title><link>https://moonorange.github.io/posts/frontend/asynchronous_programming/</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/frontend/asynchronous_programming/</guid><description>概要 JavaScript を使う上で重要な概念である非同期処理について説明していく。 非同期処理とは 「ある関数が呼び出されたとき、戻り値として本来渡したい結果を返</description></item><item><title>ReactとReduxについて(About React and Redux)</title><link>https://moonorange.github.io/posts/frontend/react-redux/</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/frontend/react-redux/</guid><description>概要 Summarizing what I learned about React and Redux React React, Javascript 周辺の用語 Babel 新しい仕様の JavaScript や JSX、TypeScript のコードを古いブラウザでも実行可能な JavaScript にコンパイルするコン</description></item></channel></rss>