<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTTP cookies on Kei's Blog</title><link>https://moonorange.github.io/categories/http-cookies/</link><description>Recent content in HTTP cookies on Kei's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://moonorange.github.io/categories/http-cookies/index.xml" rel="self" type="application/rss+xml"/><item><title>CORS</title><link>https://moonorange.github.io/posts/security/cors/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/security/cors/</guid><description>Introduction This post summarizes what I have learned when I encountered issues related to CORS.
Understanding Domains(hostname), Origins, and Sites It&amp;rsquo;s crucial to comprehend these concepts when dealing with CORS-related problems.
Origin An example of a web content&amp;rsquo;s origin is http://example.com:80. An origin is comprised of the domain (hostname), port, and scheme.
In the case above, http is the scheme, example.com is the domain, and 80 is the port.
Two URLs are considered to have the same origin only when all three of these components are identical.</description></item></channel></rss>