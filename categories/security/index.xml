<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Kei's Blog</title><link>https://moonorange.github.io/categories/security/</link><description>Recent content in Security on Kei's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://moonorange.github.io/categories/security/index.xml" rel="self" type="application/rss+xml"/><item><title>CORS</title><link>https://moonorange.github.io/posts/security/cors/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/security/cors/</guid><description>Introduction This post summarizes what I have learned when I encountered issues related to CORS.
Understanding Domains(hostname), Origins, and Sites It&amp;rsquo;s crucial to comprehend these concepts when dealing with CORS-related problems.
Origin An example of a web content&amp;rsquo;s origin is http://example.com:80. An origin is comprised of the domain (hostname), port, and scheme.
In the case above, http is the scheme, example.com is the domain, and 80 is the port.
Two URLs are considered to have the same origin only when all three of these components are identical.</description></item><item><title>Implementing TOTP in Go</title><link>https://moonorange.github.io/posts/security/2fa/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/security/2fa/</guid><description>Introduction In this article, I would like to try implementing a code that generates a one-time password, which is often used in many two-factor authentication functions, called Time-based One-time Password (TOTP), using Go.
What is Two-Factor Authentication? Before writing the TOTP generation code, let&amp;rsquo;s briefly review what two-factor authentication is.
There are mainly three types of factors for authentication: knowledge, possession, and biometrics.
Knowledge: Something only the user knows or remembers, such as a login password.</description></item><item><title>Web脆弱性</title><link>https://moonorange.github.io/posts/security/web_security/</link><pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/security/web_security/</guid><description>CSRF(Cross Site Request Forgery) 外部サイトを経由したサーバーへの悪意のあるリクエストによって利用者の意図しない処理を実行する攻撃。 user がログインした状態で悪意あるリン</description></item><item><title>OAuth2</title><link>https://moonorange.github.io/posts/security/oauth2/</link><pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/security/oauth2/</guid><description>はじめに OAuth2.0 とはサードパーティアプリケーションによる HTTP サービスへの限定的アクセスを可能にする認可フレームワークである。 The OAuth 2.0 authorization framework enables a third-party application to obtain limited</description></item></channel></rss>