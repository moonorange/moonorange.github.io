<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Kei's Blog</title><link>https://moonorange.github.io/tags/go/</link><description>Recent content in Go on Kei's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://moonorange.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Write a Large Amount of Data to CSV File with Go (Golang)</title><link>https://moonorange.github.io/posts/programming_language/golang_goroutines/</link><pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/programming_language/golang_goroutines/</guid><description>Introduction Have you ever found yourself in a situation where you needed to prepare a substantial amount of data for testing your code? If so, you&amp;rsquo;re not alone. Working with large datasets is a common requirement in software development, and Go provides some powerful tools to help you accomplish this efficiently.
In this blog post, I&amp;rsquo;ll share my approach to writing a large amount of data into a CSV file using Go, and I&amp;rsquo;ll demonstrate how to leverage Goroutines to make the process more efficient and faster.</description></item><item><title>Stack and Queue</title><link>https://moonorange.github.io/posts/dsa/queue_stacks/</link><pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/dsa/queue_stacks/</guid><description>Queue FIFO
package queue import &amp;#34;sync&amp;#34; type node struct { data interface{} next *node } type Queue struct { head *node tail *node count int lock *sync.Mutex } func NewQueue() *Queue { return &amp;amp;Queue{lock: &amp;amp;sync.Mutex{}} } func (q *Queue) Len() int { q.lock.Lock() defer q.lock.Unlock() return q.count } func (q *Queue) Push(data interface{}) { q.lock.Lock() defer q.lock.Unlock() ele := &amp;amp;node{data: data} if q.head == nil { q.head = ele q.tail = ele } else { q.</description></item><item><title>Golang Basic(Golang基礎)</title><link>https://moonorange.github.io/posts/programming_language/golang/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/programming_language/golang/</guid><description>概要 Golang についての基礎的な情報をまとめる資料である。 Go とは？ Google が開発したプログラミング言語であり、2009 年に最初のバージョンがオープンソース</description></item></channel></rss>