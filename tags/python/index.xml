<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Kei's blog</title><link>https://moonorange.github.io/tags/python/</link><description>Recent content in Python on Kei's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 14 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://moonorange.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Linked List</title><link>https://moonorange.github.io/posts/sample/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/sample/</guid><description>Introduction The linked list is a linear data structure.
There are two types of linked lists, the singly linked list and the doubly linked list.
Linked list The linked list elements are not stored at a contiguous location; the elements are linked using pointers.
Advantages over arrays
Dynamic size Ease of insertion/deletion (Need to move all elements after targeted element in array) Implementation
class Node(object): def __init__(self, val): self.</description></item></channel></rss>