<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DFS on Kei's Blog</title><link>https://moonorange.github.io/tags/dfs/</link><description>Recent content in DFS on Kei's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://moonorange.github.io/tags/dfs/index.xml" rel="self" type="application/rss+xml"/><item><title>BFS and DFS</title><link>https://moonorange.github.io/posts/dsa/bfs_dfs/</link><pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/dsa/bfs_dfs/</guid><description>BFS Templates Write a template in a python-ish pseudo-code for bfs from collections import deque def bfs(root, target): step = 0 # Enqueue root node in queue q = deque([root]) # Set to store visited nodes visited = set(q) while q: size = len(q) # Iterated the nodes which are already in the queue for _ in range(size): # Pop the first node in the queue curr = q.popleft if</description></item></channel></rss>