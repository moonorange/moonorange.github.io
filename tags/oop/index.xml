<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OOP on Kei's blog</title><link>https://moonorange.github.io/tags/oop/</link><description>Recent content in OOP on Kei's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 03 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://moonorange.github.io/tags/oop/index.xml" rel="self" type="application/rss+xml"/><item><title>OOP Random Notes</title><link>https://moonorange.github.io/posts/software_design/oop/</link><pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/software_design/oop/</guid><description>Intro Random notes of relating OOP Terminology Parameter A parameter is a named variable passed into a function. Parameter variables are used to import arguments into functions. The difference between parameters and arguments Function parameters are the names listed in the function&amp;rsquo;s definition. Function arguments are the real values passed to the function. Parameters are initialized to the values of the arguments supplied. MDN Parameter Override Overriding a method means</description></item><item><title>デザインパターン</title><link>https://moonorange.github.io/posts/software_design/design_patterns/</link><pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/software_design/design_patterns/</guid><description>デザインパターンとは 過去のソフトウェア設計者が発見し編み出した設計ノウハウを蓄積し、名前をつけ、再利用しやすいように特定の規約に従ってカタロ</description></item><item><title>デザインパターン２</title><link>https://moonorange.github.io/posts/software_design/design_patterns_2/</link><pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate><guid>https://moonorange.github.io/posts/software_design/design_patterns_2/</guid><description>8 Abstract Factory 抽象的な部品を組み合わせて抽象的な製品を作る 実装 抽象的な部品 Item link と tray のスーパークラス link と tray を同一視するためのクラス caption field はこの項目の見出</description></item></channel></rss>